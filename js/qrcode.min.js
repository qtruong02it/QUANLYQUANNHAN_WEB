/*! QRCode.js v1.0.0 (https://github.com/davidshimjs/qrcodejs) */
var QRCode; !function (o) { function t(o) { this.mode = i.MODE_8BIT_BYTE, this.data = o } function e(o, t) { this.typeNumber = o, this.errorCorrectLevel = t, this.modules = null, this.moduleCount = 0, this.dataCache = null, this.dataList = [] } function r(o, t) { if (void 0 == o.length) throw new Error(o.length + "/" + t); for (var e = 0; e < o.length && 0 == o[e];)e++; this.num = new Array(o.length - e + t); for (var r = 0; r < o.length - e; r++)this.num[r] = o[r + e] } function n(o, t) { this.totalCount = o, this.dataCount = t } function i() { } t.prototype = { getLength: function (o) { return this.data.length }, write: function (o) { for (var t = 0; t < this.data.length; t++) { var e = this.data.charCodeAt(t); e > 255 && console.log("warning: " + e + " greater than 255"), o.put(e, 8) } } }, e.prototype = { addData: function (o) { var e = new t(o); this.dataList.push(e), this.dataCache = null }, isDark: function (o, t) { if (o < 0 || this.moduleCount <= o || t < 0 || this.moduleCount <= t) throw new Error(o + "," + t); return this.modules[o][t] }, getModuleCount: function () { return this.moduleCount }, make: function () { this.makeImpl(!1, this.getBestMaskPattern()) }, makeImpl: function (o, t) { this.moduleCount = 4 * this.typeNumber + 17, this.modules = new Array(this.moduleCount); for (var e = 0; e < this.moduleCount; e++) { this.modules[e] = new Array(this.moduleCount); for (var r = 0; r < this.moduleCount; r++)this.modules[e][r] = null } this.setupPositionProbePattern(0, 0), this.setupPositionProbePattern(this.moduleCount - 7, 0), this.setupPositionProbePattern(0, this.moduleCount - 7), this.setupPositionAdjustPattern(), this.setupTimingPattern(), this.setupTypeInfo(o, t), this.typeNumber >= 7 && this.setupTypeNumber(o), null == this.dataCache && (this.dataCache = e.createData(this.typeNumber, this.errorCorrectLevel, this.dataList)), this.mapData(this.dataCache, t) }, setupPositionProbePattern: function (o, t) { for (var e = -1; e <= 7; e++)if (!(o + e <= -1 || this.moduleCount <= o + e)) for (var r = -1; r <= 7; r++)t + r <= -1 || this.moduleCount <= t + r || (this.modules[o + e][t + r] = e >= 0 && e <= 6 && (0 == r || 6 == r) || r >= 0 && r <= 6 && (0 == e || 6 == e) || e >= 2 && e <= 4 && r >= 2 && r <= 4) }, getBestMaskPattern: function () { for (var o = 0, t = 0, e = 0; e < 8; e++) { this.makeImpl(!0, e); var r = s.getLostPoint(this); (0 == e || t > r) && (t = r, o = e) } return o }, createMovieClip: function (o, t, e) { var r = o.createEmptyMovieClip(t, e), n = 1; this.make(); for (var i = 0; i < this.modules.length; i++)for (var a = 1 * a; i < this.modules[i].length; i++) { var u = this.modules[i][a]; u && (r.beginFill(0, 100), r.moveTo(a * n, i * n), r.lineTo((a + 1) * n, i * n), r.lineTo((a + 1) * n, (i + 1) * n), r.lineTo(a * n, (i + 1) * n), r.endFill()) } return r }, setupTimingPattern: function () { for (var o = 8; o < this.moduleCount - 8; o++)null == this.modules[o][6] && (this.modules[o][6] = o % 2 == 0), null == this.modules[6][o] && (this.modules[6][o] = o % 2 == 0) }, setupPositionAdjustPattern: function () { for (var o = s.getPatternPosition(this.typeNumber), t = 0; t < o.length; t++)for (var e = 0; e < o.length; e++) { var r = o[t], n = o[e]; if (null == this.modules[r][n]) for (var i = -2; i <= 2; i++)for (var a = -2; a <= 2; a++)this.modules[r + i][n + a] = i == -2 || i == 2 || a == -2 || a == 2 || 0 == i && 0 == a } }, setupTypeNumber: function (o) { for (var t = s.getBCHTypeNumber(this.typeNumber), e = 0; e < 18; e++) { var r = !o && 1 == (1 & t >> e); this.modules[Math.floor(e / 3)][e % 3 + this.moduleCount - 8 - 3] = r } for (e = 0; e < 18; e++)r = !o && 1 == (1 & t >> e), this.modules[e % 3 + this.moduleCount - 8 - 3][Math.floor(e / 3)] = r }, setupTypeInfo: function (o, t) { for (var e = this.errorCorrectLevel << 3 | t, r = s.getBCHTypeInfo(e), n = 0; n < 15; n++) { var i = !o && 1 == (1 & r >> n); n < 6 ? this.modules[n][8] = i : n < 8 ? this.modules[n + 1][8] = i : this.modules[this.moduleCount - 15 + n][8] = i } for (n = 0; n < 15; n++) { i = !o && 1 == (1 & r >> n); n < 8 ? this.modules[8][this.moduleCount - n - 1] = i : n < 9 ? this.modules[8][15 - n - 1 + 1] = i : this.modules[8][15 - n - 1] = i } this.modules[this.moduleCount - 8][8] = !o }, mapData: function (o, t) { for (var e = this.moduleCount - 1, r = 7, n = 0, i = this.moduleCount - 1; i > 0; i -= 2)for (6 == i && i--; ;) { for (var a = 0; a < 2; a++)if (null == this.modules[e][i - a]) { var u = !1; n < o.length && (u = 1 == (1 & o[n] >>> r)), s.getMask(t, e, i - a) && (u = !u), this.modules[e][i - a] = u, r--, r == -1 && (n++, r = 7) } if ((e += i % 2 ? -1 : 1) < 0 || this.moduleCount <= e) break } }, }; e.PAD0 = 236, e.PAD1 = 17, e.createData = function (o, t, e) { for (var i = n.getRSBlocks(o, t), a = new u, c = 0; c < e.length;